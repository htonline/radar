
apply plugin: 'com.android.application'
apply from: 'tinker.gradle'

def urls = rootProject.ext.url
def isRealse = rootProject.ext.isRealead
android {
    compileSdkVersion 28
    buildToolsVersion "30.0.3"
    compileOptions.encoding = "UTF-8"
    defaultConfig {
        applicationId "com.example.ladarmonitor"
        minSdkVersion 20
        targetSdkVersion 28
        ndk {
            abiFilters 'armeabi-v7a'
        }
        buildConfigField("Boolean","isRealse",String.valueOf(isRealse))
        if(isRealse){
            buildConfigField("String","URL", urls.release)
        }else {
            buildConfigField("String","URL", urls.debugUrl)
        }
        javaCompileOptions { annotationProcessorOptions { includeCompileClasspath = true } }
        multiDexEnabled true
        buildConfigField "String", "MESSAGE", "\"I am the base apk\""
        buildConfigField "String", "TINKER_ID", "\"${TINKER_ID}\""
        buildConfigField "String", "PLATFORM", "\"all\""
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    useLibrary 'org.apache.http.legacy'
    packagingOptions {
        exclude 'META-INF/spring.tooling'
        exclude 'META-INF/INDEX.LIST'
        exclude 'META-INF/spring.handlers'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/spring.schemas'
        exclude 'META-INF/XXXX'
        exclude 'META-INF/XXXX'

//        exclude 'lib/x86/libZBarDecoder.so'
//        exclude 'lib/armeabi-v7a/libZBarDecoder.so'
//        exclude 'lib/mips/libZBarDecoder.so'
//        exclude 'lib/armeabi/libZBarDecoder.so'
//        exclude 'project.properties'
//        exclude 'com.dtr.zbar.build.ZBarDecoder'
    }
    buildTypes {
        debug {

        }
        release {
            lintOptions {
                checkReleaseBuilds false
                abortOnError false
            }
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
    }
//    sourceSets {
//        main {
//            jniLibs.srcDirs = ['libs']
//        }
//    }
    android.applicationVariants.all {
        variant ->
            variant.outputs.all {
                outputFileName = "无线地质雷达采集系统_${variant.name}_v${variant.versionName}.apk"
            }
    }
    signingConfigs{
        debug{
            v2SigningEnabled false;
        }
    }
    dexOptions {
        jumboMode = true
    }

}

dependencies {
    implementation project(':uploadmodule')
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'junit:junit:4.12'
    implementation 'com.squareup.retrofit2:converter-gson:2.0.2'
    implementation 'com.squareup.retrofit2:adapter-rxjava:2.0.2'
    implementation 'com.squareup.okhttp3:okhttp:3.14.2'
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation group: 'com.alibaba', name: 'fastjson', version: '1.2.75'
    implementation 'com.google.code.gson:gson:2.9.0'
    implementation 'androidx.appcompat:appcompat:1.0.0'
    implementation 'org.jetbrains:annotations:15.0'
    api 'io.reactivex.rxjava2:rxjava:2.1.9'
    api 'io.reactivex.rxjava2:rxandroid:2.0.2'
    api 'com.squareup.retrofit2:retrofit:2.3.0'
    api 'com.squareup.retrofit2:converter-gson:2.3.0'
    api 'com.squareup.retrofit2:adapter-rxjava2:2.3.0'
    api 'com.squareup.okhttp3:logging-interceptor:3.10.0'
    annotationProcessor("com.tencent.tinker:tinker-android-anno:1.9.14.5") { changing = true }
    compileOnly("com.tencent.tinker:tinker-android-anno:1.9.14.5") { changing = true }
    implementation('com.tencent.tinker:tinker-android-lib:1.9.14.5')
    implementation "androidx.multidex:multidex:2.0.1"
}
